---
title: "DESCRIPTION File Issues"
subtitle: "The DESCRIPTION Files Issues chapter features recipes on content formatting, license structuring, and how to include additional background context & links."
format: 
  html:
    css: style.css
---

# Formatting Software Names

## Problem

The automatic spell check has flagged a software name as incorrect and results in a NOTE.

## Solution

All references to names of software, packages and API names in the description section of the DESCRIPTION file should be wrapped in single quotes. e.g., 'ggplot2', 'Python', etc.

### Details

::: {.callout-note title="CRAN Review Communication" appearance="simple" icon=false collapse=true}

Please always write package names, software names and API (application programming interface) names in single quotes in title and description.
e.g: --> 'python'

Please note that package names are case sensitive.

:::

Words in single quotes are not flagged by the automatic spell check and may be used when appropriate to include references to software names **only**.

The description section in the [DESCRIPTION file](https://github.com/tidyverse/readr/blob/main/DESCRIPTION) of the 'readr' package provides an example which uses single quotes around the package name and file extensions:

```         
Description: The goal of 'readr' is to provide a fast and friendly way to
    read rectangular data (like 'csv', 'tsv', and 'fwf').  It is designed
    to flexibly parse many types of data found in the wild, while still
    cleanly failing when data unexpectedly changes.
```

------------------------------------------------------------------------


# Explaining Acronyms

## Problem

You are using acronyms in your DESCRIPTION file or they are flagged by the automatic spell check.

## Solution

Document all non-obvious acronyms in the [cran-comments.md](https://usethis.r-lib.org/reference/use_cran_comments.html) file to facilitate the CRAN team review.

### Details

::: {.callout-note title="CRAN Review Communication" appearance="simple" icon=false collapse=true}

Please always explain all acronyms in the description text.

:::

Most acronyms that are not widely known should be explained. For example, you don’t have to explain *OLS*, *SEO*, or *DNA* but explanations should be provided for: *MEFM* or *OCCDS*. If you are unsure of the acronyms common knowledge, please document all acronyms in the package.


------------------------------------------------------------------------


# LICENSE files

## Problem

Some licenses do not need to be added verbatim, instead they are referenced in the DESCRIPTION file and the CRAN template is added to the package. You can find the template at the [CRAN website](https://cran.r-project.org/web/licenses/).

## Solution

Remove the reference `+ file LICENSE` and delete the LICENSE file.

### Details

::: {.callout-note title="CRAN Review Communication" appearance="simple" icon=false collapse=true}

The LICENSE file is only needed if you have additional restrictions to the license which you have not? In that case omit the file and its reference in the DESCRIPTION file.

License components with restrictions and base license permitting such:
GPL-3 + file LICENSE

We do not need "+ file LICENSE" and the file as these are part of R. This is only needed in case of attribution requirements or other possible restrictions. Hence please omit it.

:::

Most licenses don’t need an additional file as these are part of R. The list of which licenses that do require an additional file can be accessed within _R_ by searching for **Note: this is a template, needs + file LICENSE**:

```r
path_licenses <- list.files(path = R.home(), "license.db", full.names = TRUE, recursive = TRUE)
licenses_doc <- as.data.frame(read.dcf(path_licenses))
```

If an additional file is needed, it should only specify the **author** and **year** for a MIT file or **year**, **copyright holder**, and **organization** for a BSD file. 

::: callout-tip
## Tip

Licenses should be FOSS, or allowed by [R](https://svn.r-project.org/R/trunk/share/licenses/license.db). 

:::


------------------------------------------------------------------------

# Title Case

## Problem

The package Title field in the DESCRIPTION file is not in Title Case and the first letter of some or all of the words in the title are lowercase.

## Solution

The package Title field in the DESCRIPTION file must be in Title Case, except words like "a", "the" or "of".

### Details

::: {.callout-note title="CRAN Review Communication" appearance="simple" icon=false collapse=true}

The Title field should be in title case.  Current version is:  
'This is my title'

In title case that is:  
'This is My Title'

:::

Determining Title Case automatically can be challenging due to word significance being only known by the package author. The function `toTitleCase()` can assist with transforming sentences into Title Case from the 'tools' package.

```{r}
tools::toTitleCase("web application framework for R")
```

::: callout-note
There are some exceptions to using Title Case for quoting longer works like book titles and shorter works like [research papers](https://www.scribbr.com/academic-writing/title-case/#:~:text=In%20title%20case%2C%20the%20first,title%2C%20subtitle%2C%20or%20heading.). 

It is also not recommended to [mention package names](https://cran.r-project.org/doc/manuals/r-devel/R-exts.html#The-DESCRIPTION-file) in the Title.
:::

------------------------------------------------------------------------

# Using Authors@R


## Problem

You have not properly declared the authors, maintainers and copyright holders in the `Authors@R` section of the DESCRIPTION file.

## Solution

Add the `Authors@R` field in the DESCRIPTION file. 


### Details

::: {.callout-note title="CRAN Review Communication" appearance="simple" icon=false collapse=true}

Author field differs from that derived from Authors@R.

No Authors@R field in DESCRIPTION.  
&emsp; Please add one, modifying  
&emsp; &emsp; Authors@R: c(person(given = "Alice",    
&emsp; &emsp; &emsp; family = "Developer",  
&emsp; &emsp; &emsp; role = c("aut", "cre"),  
&emsp; &emsp; &emsp; email = "alice.developer@some.domain.net"),  
&emsp; &emsp; person(given = "Bob",  
&emsp; &emsp; &emsp; family = "Dev",  
&emsp; &emsp; &emsp; role = "aut"),  
&emsp; &emsp; )  
&emsp; as necessary.

:::

You can find more roles in the help documentation by running `?utils::person`. Make sure the provided email address is actively monitored, as it will be the primary point of contact with CRAN for future updates and fixes.

```{r, eval=FALSE}
Authors@R: person("Jane", "Smith", email = "chef@cran-cookbook.com",
  role = c("aut", "cre"), ORCID = "<USER-ORCID>")
```


::: callout-note

The Maintainer and Author fields are automatically generated, so you don't need to add them manually.

If your package uses the older approach of specifying Maintainer and Author separately in the DESCRIPTION file, it won’t be rejected for that reason alone. However, this method is discouraged, and any manual modifications that differ from the auto-generated fields will result in automatic rejection by CRAN.

:::


------------------------------------------------------------------------

# References

## Problem

The reference link in the Description field is incorrectly formatted or isn't clickable.

## Solution

Remove the space after <doi:...> or <https:...> to enable the reference link.
Write the reference in the form: Authors (year) <doi:...>.


### Details

::: {.callout-note title="CRAN Review Communication" appearance="simple" icon=false collapse=true}

If there are references describing the methods in your package, please add these in the description field of your DESCRIPTION file in the form  
authors (year) <doi:...>  
authors (year, ISBN:...)  
or if those are not available: <https:...>  
with no space after 'doi:', 'https:' and angle brackets for auto-linking. (If you want to add a title as well please put it in quotes: "Title")

:::


Ideally, each package should include at least one reference in the description text to help users further explore the theory behind the package. These references should be formatted as shown in the ['Rcpp'](https://github.com/RcppCore/Rcpp/blob/master/DESCRIPTION#L21-L29) package:

```
Description: Flexible general-purpose toolbox implementing genetic algorithms (GAs) for stochastic optimisation. Binary, real-valued, and permutation representations are available to optimize a fitness function, i.e. a function provided by users depending on their objective function. Several genetic operators are available and can be combined to explore the best settings for the current task. Furthermore, users can define new genetic operators and easily evaluate their performances. Local search using general-purpose optimisation algorithms can be applied stochastically to exploit interesting regions. GAs can be run sequentially or in parallel, using an explicit master-slave parallelisation or a coarse-grain islands approach. For more details see Scrucca (2013) <doi:10.18637/jss.v053.i04> and Scrucca (2017) <doi:10.32614/RJ-2017-008>.
```


::: callout-tip

Including a reference in the Description field is optional, and your package will not be archived if one is missing. You can also use the [cran-comments.md](https://usethis.r-lib.org/reference/use_cran_comments.html) file to provide additional references or information.

:::
