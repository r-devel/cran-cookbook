[
  {
    "objectID": "docs_issues.html",
    "href": "docs_issues.html",
    "title": "Manuals & Documentation Issues",
    "section": "",
    "text": "Every .Rd file should have an \\value-tag stating what the output of the function is. Even if nothing is returned, the \\value-tag is necessary for CRAN.\n\n\n\nOften it is enough to simply add the missing \\value-tags. If the function doesn’t return anything, write that as your \\value-tag.\n\n\nCRAN wants a \\value-tag for every .Rd-file containing info about the structure of the output (class) and also what the output means.\nAdding a short explanation for each function helps users understand effects of the function call. This prevents unexpected outputs and helps to create a better workflow when using the function.\nThe only exception are .Rd-files for data sets, marked with the \\docType{data}-tag. Since these are no functions, no \\value-tag is necessary.\nSometimes functions don’t return one specific value but are rather called for their side effects. In that case the \\value-tag should state this.\n\n\\value{No return value, called for side effects}\n\nWhen using ‘roxygen’ to render the .Rd-files, an @return-tag must be added in the corresponding .R-file. This will create the \\value-tag automatically when rendering.\n\n#' @return What your function returns.\n\nFor more details on ‘roxygen2’ check the ‘roxygen2’ section.",
    "crumbs": [
      "Manuals & Documentation Issues",
      "Manuals & Documentation Issues"
    ]
  },
  {
    "objectID": "docs_issues.html#problem",
    "href": "docs_issues.html#problem",
    "title": "Manuals & Documentation Issues",
    "section": "",
    "text": "Every .Rd file should have an \\value-tag stating what the output of the function is. Even if nothing is returned, the \\value-tag is necessary for CRAN.",
    "crumbs": [
      "Manuals & Documentation Issues",
      "Manuals & Documentation Issues"
    ]
  },
  {
    "objectID": "docs_issues.html#solution",
    "href": "docs_issues.html#solution",
    "title": "Manuals & Documentation Issues",
    "section": "",
    "text": "Often it is enough to simply add the missing \\value-tags. If the function doesn’t return anything, write that as your \\value-tag.\n\n\nCRAN wants a \\value-tag for every .Rd-file containing info about the structure of the output (class) and also what the output means.\nAdding a short explanation for each function helps users understand effects of the function call. This prevents unexpected outputs and helps to create a better workflow when using the function.\nThe only exception are .Rd-files for data sets, marked with the \\docType{data}-tag. Since these are no functions, no \\value-tag is necessary.\nSometimes functions don’t return one specific value but are rather called for their side effects. In that case the \\value-tag should state this.\n\n\\value{No return value, called for side effects}\n\nWhen using ‘roxygen’ to render the .Rd-files, an @return-tag must be added in the corresponding .R-file. This will create the \\value-tag automatically when rendering.\n\n#' @return What your function returns.\n\nFor more details on ‘roxygen2’ check the ‘roxygen2’ section.",
    "crumbs": [
      "Manuals & Documentation Issues",
      "Manuals & Documentation Issues"
    ]
  },
  {
    "objectID": "docs_issues.html#problem-1",
    "href": "docs_issues.html#problem-1",
    "title": "Manuals & Documentation Issues",
    "section": "Problem",
    "text": "Problem",
    "crumbs": [
      "Manuals & Documentation Issues",
      "Manuals & Documentation Issues"
    ]
  },
  {
    "objectID": "docs_issues.html#solution-1",
    "href": "docs_issues.html#solution-1",
    "title": "Manuals & Documentation Issues",
    "section": "Solution",
    "text": "Solution",
    "crumbs": [
      "Manuals & Documentation Issues",
      "Manuals & Documentation Issues"
    ]
  },
  {
    "objectID": "docs_issues.html#problem-2",
    "href": "docs_issues.html#problem-2",
    "title": "Manuals & Documentation Issues",
    "section": "Problem",
    "text": "Problem",
    "crumbs": [
      "Manuals & Documentation Issues",
      "Manuals & Documentation Issues"
    ]
  },
  {
    "objectID": "docs_issues.html#solution-2",
    "href": "docs_issues.html#solution-2",
    "title": "Manuals & Documentation Issues",
    "section": "Solution",
    "text": "Solution",
    "crumbs": [
      "Manuals & Documentation Issues",
      "Manuals & Documentation Issues"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "Welcome to the CRAN Cookbook, your go-to guide for solving common (and often recurring) issues spotted by CRAN volunteers during package submissions and re-submissions. Here, you’ll find practical “recipes” organized by different parts of the package structure (e.g., issues with the DESCRIPTION file can be found in the Description chapter). The CRAN Cookbook is curated by Jasmine Daly and Beni Altmann, with guidance from a steering committee of experts: Heather Turner, Bettina Grün, and Gwynn Gebeyehu. We encourage contributions from the community!\n\n\n\n\n\n\nExpand To Learn More About the Writers & Steering Committee\n\n\n\n\n\n\nWriters\n\nJasmine Daly (@jasdumas): Principal Consultant & Founder of Daly Analytics, maintainer of 2 CRAN packages.\nBeni Altmann (@Baltmann01): Student, assistant member of the CRAN Team working on CRAN submissions.\n\n\n\nSteering Committee\n\nHeather Turner (@hturner): member of the R Foundation, former R Journal Editor, maintainer of 4 CRAN packages, has run several workshops on R package development.\nBettina Grün (@bettinagruen): member of the R Foundation, Journal of Statistical Software Editor-in-Chief, former R Journal Editor, maintainer of 5 CRAN packages, manager of the two assistants on the CRAN Team working on CRAN submissions.\nGwynn Gebeyehu (@nzgwynn) data scientist, former lecturer and academic researcher, has experience of technical writing for range of audiences. R user since 2002 with package development experience.",
    "crumbs": [
      "Welcome!"
    ]
  },
  {
    "objectID": "description_issues.html#problem-1",
    "href": "description_issues.html#problem-1",
    "title": "DESCRIPTION file Issues",
    "section": "Problem",
    "text": "Problem\nYou are using acronyms in your DESCRIPTION file or they are flagged by the automatic spell check.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#solution-1",
    "href": "description_issues.html#solution-1",
    "title": "DESCRIPTION file Issues",
    "section": "Solution",
    "text": "Solution\nDocument all non-obvious acronyms in the cran-comments.md file to facilitate the CRAN team review.\n\nDetails\nMost acronyms that are not widely known should be explained. For example, you don’t have to explain OLS, SEO, or DNA but explanations should be provided for: MEFM or OCCDS. If you are unsure of the acronyms common knowledge, please document all acronyms in the package.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#problem-2",
    "href": "description_issues.html#problem-2",
    "title": "DESCRIPTION file Issues",
    "section": "Problem",
    "text": "Problem\nSome licenses do not need to be added verbatim, instead they are referenced in the DESCRIPTION file and the CRAN template is added to the package. You can find the template at the CRAN website.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#solution-2",
    "href": "description_issues.html#solution-2",
    "title": "DESCRIPTION file Issues",
    "section": "Solution",
    "text": "Solution\nRemove the reference + file LICENSE and delete the LICENSE file.\n\nDetails\nMost licenses don’t need an additional file as these are part of R. The list of which licenses that do require an additional file can be accessed within R by searching for Note: this is a template, needs + file LICENSE:\npath_licenses &lt;- list.files(path = R.home(), \"license.db\", full.names = TRUE, recursive = TRUE)\nlicenses_doc &lt;- as.data.frame(read.dcf(path_licenses))\nIf an additional file is needed, it should only specify the author and year for a MIT file or year, copyright holder, and organization for a BSD file.\n\n\n\n\n\n\nTip\n\n\n\nLicenses should be FOSS, or allowed by R.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "general_issues.html",
    "href": "general_issues.html",
    "title": "General Issues",
    "section": "",
    "text": "tbd",
    "crumbs": [
      "General Issues"
    ]
  },
  {
    "objectID": "code_issues.html#problem-1",
    "href": "code_issues.html#problem-1",
    "title": "Code Issues",
    "section": "Problem",
    "text": "Problem",
    "crumbs": [
      "Code Issues",
      "Code Issues"
    ]
  },
  {
    "objectID": "code_issues.html#solution-1",
    "href": "code_issues.html#solution-1",
    "title": "Code Issues",
    "section": "Solution",
    "text": "Solution",
    "crumbs": [
      "Code Issues",
      "Code Issues"
    ]
  },
  {
    "objectID": "code_issues.html#problem-2",
    "href": "code_issues.html#problem-2",
    "title": "Code Issues",
    "section": "Problem",
    "text": "Problem",
    "crumbs": [
      "Code Issues",
      "Code Issues"
    ]
  },
  {
    "objectID": "code_issues.html#solution-2",
    "href": "code_issues.html#solution-2",
    "title": "Code Issues",
    "section": "Solution",
    "text": "Solution",
    "crumbs": [
      "Code Issues",
      "Code Issues"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Jasmine Daly (@jasdumas): Principal Consultant & Founder of Daly Analytics, maintainer of 2 CRAN packages.\nBeni Altmann (@Baltmann01): Student, assistant member of the CRAN Team working on CRAN submissions.\n\n\n\n\n\nHeather Turner (@hturner): member of the R Foundation, former R Journal Editor, maintainer of 4 CRAN packages, has run several workshops on R package development.\nBettina Grün (@bettinagruen): member of the R Foundation, Journal of Statistical Software Editor-in-Chief, former R Journal Editor, maintainer of 5 CRAN packages, manager of the two assistants on the CRAN Team working on CRAN submissions.\nGwynn Gebeyehu (@nzgwynn) data scientist, former lecturer and academic researcher, has experience of technical writing for range of audiences. R user since 2002 with package development experience.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "about.html#writers",
    "href": "about.html#writers",
    "title": "About",
    "section": "",
    "text": "Jasmine Daly (@jasdumas): Principal Consultant & Founder of Daly Analytics, maintainer of 2 CRAN packages.\nBeni Altmann (@Baltmann01): Student, assistant member of the CRAN Team working on CRAN submissions.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "about.html#steering-committee",
    "href": "about.html#steering-committee",
    "title": "About",
    "section": "",
    "text": "Heather Turner (@hturner): member of the R Foundation, former R Journal Editor, maintainer of 4 CRAN packages, has run several workshops on R package development.\nBettina Grün (@bettinagruen): member of the R Foundation, Journal of Statistical Software Editor-in-Chief, former R Journal Editor, maintainer of 5 CRAN packages, manager of the two assistants on the CRAN Team working on CRAN submissions.\nGwynn Gebeyehu (@nzgwynn) data scientist, former lecturer and academic researcher, has experience of technical writing for range of audiences. R user since 2002 with package development experience.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Additional Resources",
    "section": "",
    "text": "Writing R Extensions\nCRAN Repository Policy\nChecklist for CRAN submissions\n“R Packages” by Hadley Wickham and Jennifer Bryan",
    "crumbs": [
      "Additional Resources"
    ]
  },
  {
    "objectID": "general_issues.html#description-length",
    "href": "general_issues.html#description-length",
    "title": "General Issues",
    "section": "Description Length",
    "text": "Description Length\nThe description field in the DESCRIPTION file should be a short paragraph (2+ sentences) on the package’s purpose, motivation and may include further references to the package documentation website. You can also consider the Description length to be similar to a blurb or synopsis written on the inside jacket of a book - brief but informative. A good example of this description length is included in the ‘tidyverse’ package.",
    "crumbs": [
      "General Issues"
    ]
  },
  {
    "objectID": "description_issues.html",
    "href": "description_issues.html",
    "title": "DESCRIPTION file Issues",
    "section": "",
    "text": "The automatic spell check has flagged a software name as incorrect and results in a NOTE.\n\n\n\nAll references to names of software, packages and API names in the description section of the DESCRIPTION file should be wrapped in single quotes. e.g.: ‘ggplot2’, ‘Python’, etc.\n\n\nWords in single quotes are not flagged by the automatic spell check and may be used when appropriate to include references to software names only.\nThe description section in the DESCRIPTION file of the ‘readr’ package provides an example which uses single quotes around the package name and file extensions:\nDescription: The goal of 'readr' is to provide a fast and friendly way to\n    read rectangular data (like 'csv', 'tsv', and 'fwf').  It is designed\n    to flexibly parse many types of data found in the wild, while still\n    cleanly failing when data unexpectedly changes.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#problem",
    "href": "description_issues.html#problem",
    "title": "DESCRIPTION file Issues",
    "section": "",
    "text": "The automatic spell check has flagged a software name as incorrect and results in a NOTE.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#solution",
    "href": "description_issues.html#solution",
    "title": "DESCRIPTION file Issues",
    "section": "",
    "text": "All references to names of software, packages and API names in the description section of the DESCRIPTION file should be wrapped in single quotes. e.g.: ‘ggplot2’, ‘Python’, etc.\n\n\nWords in single quotes are not flagged by the automatic spell check and may be used when appropriate to include references to software names only.\nThe description section in the DESCRIPTION file of the ‘readr’ package provides an example which uses single quotes around the package name and file extensions:\nDescription: The goal of 'readr' is to provide a fast and friendly way to\n    read rectangular data (like 'csv', 'tsv', and 'fwf').  It is designed\n    to flexibly parse many types of data found in the wild, while still\n    cleanly failing when data unexpectedly changes.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#problem-3",
    "href": "description_issues.html#problem-3",
    "title": "DESCRIPTION file Issues",
    "section": "Problem",
    "text": "Problem\nThe package Title field in the DESCRIPTION file is not in Title Case and the first letter of some or all of the words in the title are lowercase.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#solution-3",
    "href": "description_issues.html#solution-3",
    "title": "DESCRIPTION file Issues",
    "section": "Solution",
    "text": "Solution\nThe package Title field in the DESCRIPTION file must be in Title Case, except words like “a”, “the” or “of”.\n\nDetails\nDetermining Title Case automatically can be challenging due to word significance being only known by the package author. The function toTitleCase() can assist with transforming sentences into Title Case from the ‘tools’ package.\n\ntools::toTitleCase(\"web application framework for R\")\n\n[1] \"Web Application Framework for R\"\n\n\n\n\n\n\n\n\nNote\n\n\n\nThere are some exceptions to using Title Case for quoting longer works like book titles and shorter works like research papers.\nIt is also not recommended to mention package names in the Title.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#problem-4",
    "href": "description_issues.html#problem-4",
    "title": "DESCRIPTION file Issues",
    "section": "Problem",
    "text": "Problem\nYou have not properly declared the authors, maintainers and copyright holders in the Authors@R section of the DESCRIPTION file.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#solution-4",
    "href": "description_issues.html#solution-4",
    "title": "DESCRIPTION file Issues",
    "section": "Solution",
    "text": "Solution\nAdd the Authors@R field in the DESCRIPTION file.\n\nDetails\nYou can find more roles in the help documentation by running ?utils::person. Make sure the provided email address is actively monitored, as it will be the primary point of contact with CRAN for future updates and fixes.\n\nAuthors@R: person(\"Jane\", \"Smith\", email = \"chef@cran-cookbook.com\",\n  role = c(\"aut\", \"cre\"), ORCID = \"&lt;USER-ORCID&gt;\")\n\n\n\n\n\n\n\nNote\n\n\n\nThe Maintainer and Author fields are automatically generated, so you don’t need to add them manually.\nIf your package uses the older approach of specifying Maintainer and Author separately in the DESCRIPTION file, it won’t be rejected for that reason alone. However, this method is discouraged, and any manual modifications that differ from the auto-generated fields will result in automatic rejection by CRAN.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#problem-5",
    "href": "description_issues.html#problem-5",
    "title": "DESCRIPTION file Issues",
    "section": "Problem",
    "text": "Problem\nThe reference link in the Description field is incorrectly formatted or isn’t clickable.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "description_issues.html#solution-5",
    "href": "description_issues.html#solution-5",
    "title": "DESCRIPTION file Issues",
    "section": "Solution",
    "text": "Solution\nRemove the space after &lt;doi:…&gt; or &lt;https:…&gt; to enable the reference link. Write the reference in the form: Authors (year) &lt;doi:…&gt;.\n\nDetails\nIdeally, each package should include at least one reference in the description text to help users further explore the theory behind the package. These references should be formatted as shown in the ‘Rcpp’ package:\nDescription: The 'Rcpp' package provides R functions as well as C++ classes which\n offer a seamless integration of R and C++. Many R data types and objects can be\n mapped back and forth to C++ equivalents which facilitates both writing of new\n code as well as easier integration of third-party libraries. Documentation\n about 'Rcpp' is provided by several vignettes included in this package, via the\n 'Rcpp Gallery' site at &lt;https://gallery.rcpp.org&gt;, the paper by Eddelbuettel and\n Francois (2011, &lt;doi:10.18637/jss.v040.i08&gt;), the book by Eddelbuettel (2013,\n &lt;doi:10.1007/978-1-4614-6868-4&gt;) and the paper by Eddelbuettel and Balamuta (2018,\n &lt;doi:10.1080/00031305.2017.1375990&gt;); see 'citation(\"Rcpp\")' for details.\n\n\n\n\n\n\nTip\n\n\n\nIncluding a reference in the Description field is optional, and your package will not be archived if one is missing. You can also use the cran-comments.md file to provide additional references or information.",
    "crumbs": [
      "DESCRIPTION file Issues"
    ]
  },
  {
    "objectID": "preface.html#contributors",
    "href": "preface.html#contributors",
    "title": "Preface",
    "section": "Contributors",
    "text": "Contributors\nThanks to all contributors!\nLluís Revilla (@llrs)",
    "crumbs": [
      "Preface"
    ]
  }
]